package baseClass;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;

/* This class is used for WebDriver
 * initialization
 */
public class TestBase {

	public WebDriver driver;
	public Properties prop;
	public String url;
	public String screenShotPath;
	public WebDriverWait wait;
	
		
	/* Initialize the web Driver.
	 * @return webDriver
	 */	
		public WebDriver DriverInitializer() throws IOException
		{
			
			 prop= new Properties();
			 FileInputStream fileInput =new FileInputStream(System.getProperty("user.dir")+"\\InputFiles\\data.properties");
			 prop.load(fileInput);
			 
			 String browserName = prop.getProperty("browser");
			 url = prop.getProperty("applicationUrl");
			 screenShotPath =prop.getProperty("screenshotFolder");
			 System.out.println("start");
			 if(browserName.equals("chrome"))
			 {
				String chromePath = prop.getProperty("chromDriverPath"); 
				System.setProperty("webdriver.chrome.driver",System.getProperty("user.dir")+chromePath);
				
				 driver= new ChromeDriver();
				 System.out.println("ChromeDirver");
			 }
			 else if (browserName.equals("firefox"))	
			 {
				String firefoxPath = prop.getProperty("firefoxDriverPath"); 
				System.setProperty("webdriver.gecko.driver", System.getProperty("user.dir")+firefoxPath);
				driver= new FirefoxDriver();
			 }
		
			driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			wait = new WebDriverWait(driver,50);
			
			
			return driver;
	}
		
		/* Capture Screen Shot.
		 * @param TestCaseName
		 * @param WebDriver
		 * @param pass/fail
		 */	
		public void CaptureScreenShot(WebDriver driver ,boolean error) throws IOException
		{
			String destinationFile;
			if(!error)
			{
				 destinationFile = System.getProperty("user.dir")+"\\Failed-"+System.currentTimeMillis()+".png";
			}else
			{
				destinationFile = System.getProperty("user.dir")+"\\Passed-"+System.currentTimeMillis()+".png";
			}
			File source =((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);			
			FileUtils.copyFile(source,new File(destinationFile));
		}
}

