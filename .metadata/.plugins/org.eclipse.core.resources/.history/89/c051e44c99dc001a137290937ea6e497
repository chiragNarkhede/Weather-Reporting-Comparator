package baseClass;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.apache.commons.io.FileUtils;
import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;

/* This class is used for WebDriver
 * initialization
 */
public class TestBase {

	public WebDriver driver;
	public Properties prop;
	public String url;	
	public WebDriverWait wait;
	Logger logger;
	
	public TestBase()
	{
		logger=Logger.getLogger(this.getClass()); 
		PropertyConfigurator.configure("Log4j.properties");
	}
		
	/* Initialize the web Driver.
	 * @return webDriver
	 */	
		public WebDriver DriverInitializer() throws IOException
		{
			try 
			{
				 
				logger.debug("START: DriverInitializer");
				 prop= new Properties();
				 logger.debug("Load the property file.");
				 FileInputStream fileInput =new FileInputStream(System.getProperty("user.dir")+"\\InputFiles\\data.properties");
				 prop.load(fileInput);
				 
				 String browserName = prop.getProperty("browser");
				 logger.info("Browser Name is "+browserName);
				 url = prop.getProperty("applicationUrl");
				 logger.debug("Checking which browser need to be invoked");
				 if(browserName.equals("chrome"))
				 {
					
					String chromePath = prop.getProperty("chromDriverPath"); 
					System.setProperty("webdriver.chrome.driver",System.getProperty("user.dir")+chromePath);
					driver= new ChromeDriver();
				 }
				 else if (browserName.equals("firefox"))	
				 {
					String firefoxPath = prop.getProperty("firefoxDriverPath"); 
					System.setProperty("webdriver.gecko.driver", System.getProperty("user.dir")+firefoxPath);
					driver= new FirefoxDriver();
				 }
			
				driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
				logger.debug("Creating web Driver wait.");
				wait = new WebDriverWait(driver,50);
			}
			catch (Exception e)
			{
				logger.fatal("Exception Occured"+e.getMessage()+e.getStackTrace());
			}finally 
			{
				logger.debug("END: DriverInitializer");
			}
			return driver;
	}
		
		/* Capture Screen Shot.
		 * @param TestCaseName
		 * @param WebDriver
		 * @param pass/fail
		 */	
		public void CaptureScreenShot(WebDriver driver ,boolean error) throws IOException
		{
			logger.debug("START: Capturing Screen Shot.");
			try 
			{
				String destinationFile;
				if(!error)
				{
					 destinationFile = System.getProperty("user.dir")+"\\Failed-"+System.currentTimeMillis()+".png";
				}else
				{
					destinationFile = System.getProperty("user.dir")+"\\Passed-"+System.currentTimeMillis()+".png";
				}
				File source =((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);			
				FileUtils.copyFile(source,new File(destinationFile));
			} catch (Exception  e)
			{
				logger.fatal("Exception Occured"+e.getMessage()+e.getStackTrace());
				
			}
			finally 
			{
				logger.debug("END: Capturing Screen Shot.");
			}
			
		}
}

